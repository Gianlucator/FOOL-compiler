classe singola dec:
- class Rectangle(int l1, int l2) {
    int area() l1 * l2;
  };

  let Rectangle r = new Rectangle(2, 4);
  in print(r.area());
- "8"

inheritance semplice:
- class A {
    int u() 1;
  }
  class B implements A {
    int s(int x) x + 1;
  };

  let A x = new B;
  in print(x.u());
- "1"

overriding:
- class A {
    int u() 1;
  }
  class B implements A {
    bool u() true;
    int s(int x) x + 1;
  };

  let B x = new B;
  in print(x.u());
- "true"

covarianza corr:
- class Parent(int a) {
    int f(int x) 2 * 2;
    int r(int y) 2 * y;
  }
  class Child implements Parent (int a) {
     int f(int x) 2 * x;
     int r(int y) 3 * y;
  };

  let int x = 4; Parent o = new Child(x);
  in o.f(x);
- ""

err:
- class Parent(int a) {
    int f(int x) 2 * 2;
    int r(int y) 2 * y;
  }
  class Child implements Parent (int a) {
     bool f(int x) 2 * x;
     int r(int y) 3 * y;
  };

  let int x = 4; Parent o = new Child(x);
  in o.f(x);
- ""